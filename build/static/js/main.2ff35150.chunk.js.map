{"version":3,"sources":["components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["CustomModal","props","handleChange","e","target","name","value","type","checked","activeItem","state","setState","this","toggle","onSave","Modal","isOpen","ModalHeader","ModalBody","Form","FormGroup","Label","for","Input","id","title","onChange","placeholder","description","check","completed","ModalFooter","Button","color","onClick","Component","App","refreshList","axios","get","then","res","todoList","data","catch","err","console","log","modal","handleSubmit","item","put","post","handleDelete","delete","createItem","editItem","displayCompleted","status","viewCompleted","renderTabList","className","renderItems","filter","map","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2ff35150.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport {\n    Button,\n    Modal,\n    ModalHeader,\n    ModalBody,\n    ModalFooter,\n    Form,\n    FormGroup,\n    Input,\n    Label,\n} from \"reactstrap\";\n\nexport default class CustomModal extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeItem: this.props.activeItem,\n        };\n    }\n\n    handleChange = (e) => {\n        let { name, value } = e.target;\n\n        if (e.target.type === \"checkbox\") {\n            value = e.target.checked;\n        }\n\n        const activeItem = { ...this.state.activeItem, [name]: value };\n\n        this.setState({ activeItem });\n    };\n\n    render() {\n        const { toggle, onSave } = this.props;\n\n        return (\n            <Modal isOpen={true} toggle={toggle}>\n                <ModalHeader toggle={toggle}>Todo Item</ModalHeader>\n                <ModalBody>\n                    <Form>\n                        <FormGroup>\n                            <Label for=\"todo-title\">Title</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"todo-title\"\n                                name=\"title\"\n                                value={this.state.activeItem.title}\n                                onChange={this.handleChange}\n                                placeholder=\"Enter Todo Title\"\n                            />\n                        </FormGroup>\n                        <FormGroup>\n                            <Label for=\"todo-description\">Description</Label>\n                            <Input\n                                type=\"text\"\n                                id=\"todo-description\"\n                                name=\"description\"\n                                value={this.state.activeItem.description}\n                                onChange={this.handleChange}\n                                placeholder=\"Enter Todo description\"\n                            />\n                        </FormGroup>\n                        <FormGroup check>\n                            <Label check>\n                                <Input\n                                    type=\"checkbox\"\n                                    name=\"completed\"\n                                    checked={this.state.activeItem.completed}\n                                    onChange={this.handleChange}\n                                />\n                                Completed\n                            </Label>\n                        </FormGroup>\n                    </Form>\n                </ModalBody>\n                <ModalFooter>\n                    <Button\n                        color=\"success\"\n                        onClick={() => onSave(this.state.activeItem)}\n                    >\n                        Save\n                    </Button>\n                </ModalFooter>\n            </Modal>\n        );\n    }\n}","import './App.css';\nimport Modal from \"./components/Modal\";\nimport React, { Component } from \"react\";\nimport axios from \"axios\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewCompleted: false,\n      todoList: [],\n      modal: false,\n      activeItem: {\n        title: \"\",\n        description: \"\",\n        completed: false,\n      },\n    };\n  }\n\n  componentDidMount() {\n    this.refreshList();\n  }\n\n  refreshList = () => {\n    axios\n        .get(\"/api/todos/\")\n        .then((res) => this.setState({ todoList: res.data }))\n        .catch((err) => console.log(err));\n  };\n\n  toggle = () => {\n    this.setState({ modal: !this.state.modal });\n  };\n\n  handleSubmit = (item) => {\n    this.toggle();\n\n    if (item.id) {\n      axios\n          .put(`/api/todos/${item.id}/`, item)\n          .then((res) => this.refreshList());\n      return;\n    }\n    axios\n        .post(\"/api/todos/\", item)\n        .then((res) => this.refreshList());\n  };\n\n  handleDelete = (item) => {\n    axios\n        .delete(`/api/todos/${item.id}/`)\n        .then((res) => this.refreshList());\n  };\n\n  createItem = () => {\n    const item = { title: \"\", description: \"\", completed: false };\n\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n\n  editItem = (item) => {\n    this.setState({ activeItem: item, modal: !this.state.modal });\n  };\n\n  displayCompleted = (status) => {\n    if (status) {\n      return this.setState({ viewCompleted: true });\n    }\n\n    return this.setState({ viewCompleted: false });\n  };\n\n  renderTabList = () => {\n    return (\n        <div className=\"nav nav-tabs\">\n        <span\n            onClick={() => this.displayCompleted(true)}\n            className={this.state.viewCompleted ? \"nav-link active\" : \"nav-link\"}\n        >\n          Complete\n        </span>\n          <span\n              onClick={() => this.displayCompleted(false)}\n              className={this.state.viewCompleted ? \"nav-link\" : \"nav-link active\"}\n          >\n          Incomplete\n        </span>\n        </div>\n    );\n  };\n\n  renderItems = () => {\n    const { viewCompleted } = this.state;\n    const newItems = this.state.todoList.filter(\n        (item) => item.completed === viewCompleted\n    );\n\n    return newItems.map((item) => (\n        <li\n            key={item.id}\n            className=\"list-group-item d-flex justify-content-between align-items-center\"\n        >\n        <span\n            className={`todo-title mr-2 ${\n                this.state.viewCompleted ? \"completed-todo\" : \"\"\n            }`}\n            title={item.description}\n        >\n          {item.title}\n        </span>\n          <span>\n          <button\n              className=\"btn btn-secondary mr-2\"\n              onClick={() => this.editItem(item)}\n          >\n            Edit\n          </button>\n          <button\n              className=\"btn btn-danger\"\n              onClick={() => this.handleDelete(item)}\n          >\n            Delete\n          </button>\n        </span>\n        </li>\n    ));\n  };\n\n  render() {\n    return (\n        <main className=\"container\">\n          <h1 className=\"text-white text-uppercase text-center my-4\">Todo app</h1>\n          <div className=\"row\">\n            <div className=\"col-md-6 col-sm-10 mx-auto p-0\">\n              <div className=\"card p-3\">\n                <div className=\"mb-4\">\n                  <button\n                      className=\"btn btn-primary\"\n                      onClick={this.createItem}\n                  >\n                    Add task\n                  </button>\n                </div>\n                {this.renderTabList()}\n                <ul className=\"list-group list-group-flush border-top-0\">\n                  {this.renderItems()}\n                </ul>\n              </div>\n            </div>\n          </div>\n          {this.state.modal ? (\n              <Modal\n                  activeItem={this.state.activeItem}\n                  toggle={this.toggle}\n                  onSave={this.handleSubmit}\n              />\n          ) : null}\n        </main>\n    );\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}